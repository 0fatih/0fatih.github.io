I"\<p>CRLF, birçok protokolde kullanılan bir yöntemdir. Kullanılma amacı genellikle; bir satırı bitirip yeni satırın başladığını belirtmektir. Web Uygulamalarında ise, HTTP isteklerinde kullanılır. Bir isteğin header kısmı dediğimiz bölüm ile, HTML kodlarını ayırmada ve satır sonlarını belirtmekte kullanırız. Encode edilmiş hali “%0d%0a” iken, encode edilmemiş hali “\r\n” dir. CRLF’lerin kullanımına örnek bir istek şu şekilde olabilir:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    GET / HTTP/1.1%0d%0a
    Host: fatihfurkan.site%0d%0a
</code></pre></div></div>

<p>CRLF’den bahsettiğimize göre, CRLF Injection saldırısına geçebiliriz.</p>

<p>CRLF karakterlerin, bölümleri ve satırları ayırma işlemlerinde kullanıldığını söyledik. Biraz kurnazlık yaparak, gönderdiğimiz isteklerdeki bu karakterleri amacına yönelik olmayan bir şekilde bölümleri ayırabiliriz.</p>

<p>CRLF Injection kullanılarak; <a href="https://fatihfurkan.site/2020/HTTP-Request-Smuggling/">HTTP Request Smuggling</a>, <a href="https://fatihfurkan.site/2020/HTTP-Response-Splitting/">HTTP Response Splitting</a> gibi açıklardan faydalanabiliriz.</p>

<p>Bu konu pek uzun olmadı biliyorum ancak uzatılması gereksiz bir konu. Mantığını anlayıp, sebebiyet oluşturacağı açıklara yönelmenin daha mantıklı olacağını düşünüyorum.</p>

<p><strong>Fatih Furkan Hatipoğlu</strong></p>

<p> </p>

<p>Bana bu kadar bilgi yetmez, daha fazlasını istiyorum diyenler için birkaç tavsiye kaynak:</p>

<p><a href="https://www.netsparker.com.tr/blog/web-guvenligi/crlf-injection-ve-http-response-splitting-zafiyeti/">Netsparket - CRLF Injection</a></p>

<p><a href="https://www.acunetix.com/websitesecurity/crlf-injection/">Acunetix - CRLF Injection</a></p>
:ET